{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","SettingTheme.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","Chart","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","price","time_open","getTime","open","high","low","close","options","plotOptions","candlestick","colors","upward","downward","wick","useFillColor","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","ContainerPrice","styled","div","PriceTitle","PriceValue","Price","tickersLoading","tickersData","quotes","USD","percent_change_30m","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","Title","h1","props","accentColor","Loader","span","Container","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Navigation","Coin","useParams","state","useLocation","history","useHistory","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","console","log","loading","Helmet","name","onClick","goBack","rank","symbol","toFixed","description","total_supply","max_supply","to","path","CoinsList","ul","li","bgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","ToggleButton","SettingTheme","className","onChange","eventToggle","dark","light","GlobalStyle","createGlobalStyle","App","useState","themeMode","setThemeMode","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.a5d48317.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => [\n                new Date(price.time_open).getTime(), // 날짜\n                price.open, // 시작가\n                price.high, // 최고가\n                price.low, // 최저가\n                price.close, // 종가\n              ]),\n            },\n          ]}\n          options={{\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: \"#FF0000\",\n                  downward: \"#0000FF\",\n                },\n                wick: {\n                  useFillColor: true,\n                },\n              },\n            },\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 1,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory, fetchCoinTickers } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport styled from \"styled-components\";\n\nconst ContainerPrice = styled.div`\n  padding: 10px 5px;\n  border: 1px solid #c1c1c1;\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nconst PriceTitle = styled.div`\n  font-weight: bold;\n  font-size: 16px;\n`;\n\nconst PriceValue = styled.div`\n  padding-top: 5px;\n  text-align: right;\n`;\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\ninterface PriceProps {\n  coinId: string;\n}\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  return (\n    <div>\n      {tickersLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <>\n          <ContainerPrice>\n            <PriceTitle>price</PriceTitle>\n            <PriceValue>{tickersData?.quotes.USD.price}</PriceValue>\n          </ContainerPrice>\n\n          <ContainerPrice>\n            <PriceTitle>change_30m</PriceTitle>\n            <PriceValue>\n              {tickersData?.quotes.USD.percent_change_30m}%\n            </PriceValue>\n          </ContainerPrice>\n\n          <ContainerPrice>\n            <PriceTitle>change_1h</PriceTitle>\n            <PriceValue>\n              {tickersData?.quotes.USD.percent_change_1h}%\n            </PriceValue>\n          </ContainerPrice>\n\n          <ContainerPrice>\n            <PriceTitle>change_6h</PriceTitle>\n            <PriceValue>\n              {tickersData?.quotes.USD.percent_change_6h}%\n            </PriceValue>\n          </ContainerPrice>\n\n          <ContainerPrice>\n            <PriceTitle>change_12h</PriceTitle>\n            <PriceValue>\n              {tickersData?.quotes.USD.percent_change_12h}%\n            </PriceValue>\n          </ContainerPrice>\n\n          <ContainerPrice>\n            <PriceTitle>change_24h</PriceTitle>\n            <PriceValue>\n              {tickersData?.quotes.USD.percent_change_24h}%\n            </PriceValue>\n          </ContainerPrice>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n  useHistory,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nconst Navigation = styled.div`\n  padding: 20px 0;\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const history = useHistory();\n  const priceMatch = useRouteMatch(\"/react-masterclass/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/react-masterclass/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  console.log(tickersData);\n  const loading = infoLoading || tickersLoading;\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Navigation>\n        <button onClick={goBack}>뒤로가기</button>\n      </Navigation>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/react-masterclass/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/react-masterclass/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/react-masterclass/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/react-masterclass/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/react-masterclass/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/react-masterclass/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/react-masterclass\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import styled from \"styled-components\";\n\nconst ToggleButton = styled.div`\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n  }\n\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n  }\n\n  .slider:before {\n    position: absolute;\n    content: \"\";\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n  }\n\n  input:checked + .slider {\n    background-color: #2196f3;\n  }\n\n  input:focus + .slider {\n    box-shadow: 0 0 1px #2196f3;\n  }\n\n  input:checked + .slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }\n\n  /* Rounded sliders */\n  .slider.round {\n    border-radius: 34px;\n  }\n\n  .slider.round:before {\n    border-radius: 50%;\n  }\n`;\n\nfunction SettingTheme(props: any) {\n  return (\n    <ToggleButton>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onChange={props.eventToggle} />\n        <span className=\"slider\"></span>\n      </label>\n    </ToggleButton>\n  );\n}\n\nexport default SettingTheme;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n\nexport const dark: DefaultTheme = {\n  textColor: \"#fff\",\n  bgColor: \"#222\",\n  accentColor: \"#fff\",\n};\n\nexport const light: DefaultTheme = {\n  textColor: \"#000\",\n  bgColor: \"#aaa\",\n  accentColor: \"#000\",\n};\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport SettingTheme from \"./SettingTheme\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { dark, light, theme } from \"./theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const [themeMode, setThemeMode] = useState(\"light\");\n  const theme = themeMode === \"light\" ? light : dark;\n  const changeTheme = () =>\n    setThemeMode(themeMode === \"light\" ? \"dark\" : \"light\");\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <SettingTheme eventToggle={changeTheme} />\n      <Router />\n      {/* <ReactQueryDevtools initialIsOpen={true} /> */}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\n\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      \n        <App />\n\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}